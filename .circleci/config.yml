version: 2.1
executors:
  dev-executor:
     docker:
       - image: 455589372314.dkr.ecr.eu-central-1.amazonaws.com/omnia-srv-base:0.0.2
         aws_auth:
           aws_access_key_id: $AWS_SANDBOX_USERNAME  # can specify string literal values
           aws_secret_access_key: $AWS_SANDBOX_PASSWORD  # or project UI envar reference

jobs:
  build_and_pushing_artifacts:
    executor: dev-executor
    working_directory: ~/basecode
    steps:
      - checkout
      - run: npm install
      - run: zip -r omnia-sample.1.0.$CIRCLE_BUILD_NUM.zip ./*
      - run: ls -lah
      - run: pwd
      - run:
         name: Install jFrog CLI
         command: curl -fL https://getcli.jfrog.io | sh
      - run:
         name: Push to Artifactory
         command: |
            ./jfrog rt config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_APIKEY --interactive=false
            ./jfrog rt u omnia-sample.1.0.$CIRCLE_BUILD_NUM.zip generic-local/sample/ --build-name=omnia-sample.1.0.$CIRCLE_BUILD_NUM.zip --build-number=$CIRCLE_BUILD_NUM
            ./jfrog rt bce omnia-sample.1.0.$CIRCLE_BUILD_NUM.zip $CIRCLE_BUILD_NUM  # collects all environment variables on the agent
            ./jfrog rt bp omnia-sample.1.0.$CIRCLE_BUILD_NUM.zip $CIRCLE_BUILD_NUM  # attaches ^^ to the build in artifactory

  deploy_dev:
    executor: dev-executor
    working_directory: ~/basecode
    steps:
      - run: ls -lah
      - run: pwd
      - run: aws s3 sync . s3://octopus-test

  deploy_stage:
    executor: dev-executor
    working_directory: ~/basecode
    steps:
      - run: echo "STAGE"

  deploy_prod:
    executor: dev-executor
    working_directory: ~/basecode
    steps:
      - run: echo "PROD"

workflows:
  version: 2
  build-publish-and-approval-deploy:
    jobs:
      - build_and_pushing_artifacts
      - deploy_dev:
          requires:
            - build_and_pushing_artifacts
      - hold:
          type: approval
          requires:
            - deploy_dev
      - deploy_stage:
          requires:
            - hold
      - deploy_prod:
          requires:
            - deploy_stage